name: Deploy Java Application

on:
  push:
    branches: [ "develop", "master" ]

# я же знаю имя контейнера (без тега) его по имени можно останавливать и удалять, а запускать уже из имеджа по известному тегу
env:
  IMAGE_TAG: master-${{ github.run_number }}
  IMAGE_NAME: jzs175/spring-welcome-app
  CONTAINER_NAME: spring-welcome-app

jobs:
  maven-build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'

      - name: Building with Maven
        run: |
          mvn -B package --file pom.xml

  deploy:
    needs: [maven-build]
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-22.04
    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker MetaInfo
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.IMAGE_TAG }}            

      - name: Build Docker Image and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Redeploy Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_PROD_HOST }}
          username: ${{ secrets.SSH_PROD_USERNAME }}
          password: ${{ secrets.SSH_PROD_PASSWORD }}
          port: ${{ secrets.SSH_PROD_PORT }}
          script_stop: true
          script: |
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
            docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker run -d --name ${{ env.CONTAINER_NAME }} ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}